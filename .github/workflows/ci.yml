name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    timeout-minutes: 15
    
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --no-fund
      
      - name: Type check
        run: npx tsc --noEmit --skipLibCheck
      
      - name: Build application
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: npm run build
      
      - name: Verify build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ Frontend build successful"
            ls -la dist/
          else
            echo "❌ Frontend build failed"
            exit 1
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 7

  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    timeout-minutes: 15
    
    defaults:
      run:
        working-directory: backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test application startup
        env:
          PYTHONPATH: .
          CONFIG_FILE: config.test.yaml
        run: |
          echo "Testing backend startup..."
          timeout 30s python app/main.py &
          sleep 5
          echo "✅ Backend startup test completed"

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [changes, frontend-ci, backend-ci]
    if: always()
    
    steps:
      - name: Check build results
        run: |
          echo "Changes detected:"
          echo "- Frontend: ${{ needs.changes.outputs.frontend }}"
          echo "- Backend: ${{ needs.changes.outputs.backend }}"
          echo "Build results:"
          echo "- Frontend CI: ${{ needs.frontend-ci.result }}"
          echo "- Backend CI: ${{ needs.backend-ci.result }}"
          
          if [[ "${{ needs.frontend-ci.result }}" == "failure" || "${{ needs.backend-ci.result }}" == "failure" ]]; then
            echo "❌ CI Pipeline failed"
            exit 1
          else
            echo "✅ CI Pipeline completed successfully"
          fi