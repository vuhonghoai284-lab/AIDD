name: Build Docker Images (Simple)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  PROJECT_NAME: aidd

jobs:
  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/backend:latest
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/frontend:latest
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  basic-test:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test with simple Docker commands
      run: |
        # 测试镜像是否可以运行
        echo "Testing backend image..."
        docker run --rm ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/backend:latest python -c "print('Backend OK')" || echo "Backend test failed"
        
        echo "Testing frontend image..."  
        docker run --rm ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/frontend:latest nginx -t || echo "Frontend test failed"
        
        echo "Basic tests completed"