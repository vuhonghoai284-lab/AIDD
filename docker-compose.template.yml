version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${APP_NAME:-aidd}-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8080}:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=/app
      # 数据库配置
      - DATABASE_TYPE=${DATABASE_TYPE:-postgresql}
      - DATABASE_URL=${DATABASE_URL}
      # Redis配置
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      # 安全配置
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      # AI服务配置
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BAIDU_API_KEY=${BAIDU_API_KEY:-}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
      # OAuth配置
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      # 外部访问配置
      - EXTERNAL_HOST=${EXTERNAL_HOST:-localhost}
      - EXTERNAL_PORT=${EXTERNAL_PORT:-8080}
      - EXTERNAL_PROTOCOL=${EXTERNAL_PROTOCOL:-http}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    depends_on:
      - redis
      # DATABASE_DEPENDS_ON_PLACEHOLDER
    networks:
      - aidd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${FRONTEND_API_BASE_URL}
        - VITE_APP_TITLE=${FRONTEND_APP_TITLE:-AI文档测试系统}
        - VITE_APP_VERSION=${APP_VERSION:-2.0.0}
    container_name: ${APP_NAME:-aidd}-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - backend
    networks:
      - aidd-network

  redis:
    image: redis:7-alpine
    container_name: ${APP_NAME:-aidd}-redis
    restart: unless-stopped
    command: redis-server --appendonly yes ${REDIS_PASSWORD_CMD}
    volumes:
      - redis_data:/data
    networks:
      - aidd-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# DATABASE_SERVICES_PLACEHOLDER

volumes:
  backend_data:
  backend_logs:
  redis_data:
# DATABASE_VOLUMES_PLACEHOLDER

networks:
  aidd-network:
    driver: bridge